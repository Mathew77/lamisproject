{"ast":null,"code":"import _objectSpread from \"/Users/matosky/react-reduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n\nvar genLineData = function genLineData() {\n  var moreData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var moreData2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return {\n    labels: MONTHS,\n    datasets: [_objectSpread({\n      label: 'Dataset 1',\n      backgroundColor: getColor('primary'),\n      borderColor: getColor('primary'),\n      borderWidth: 1,\n      data: [randomNum(), randomNum(), randomNum(), randomNum(), randomNum(), randomNum(), randomNum()]\n    }, moreData), _objectSpread({\n      label: 'Dataset 2',\n      backgroundColor: getColor('secondary'),\n      borderColor: getColor('secondary'),\n      borderWidth: 1,\n      data: [randomNum(), randomNum(), randomNum(), randomNum(), randomNum(), randomNum(), randomNum()]\n    }, moreData2)]\n  };\n};\n\nexport var userProgressTableData = [{\n  name: 'Tom Suliman'\n}, {\n  name: 'Jenny Alex'\n}, {\n  name: 'Simi Adedeji'\n}, {\n  name: 'Christine Ada'\n}];\nexport var chartjs = {\n  line: {\n    data: {\n      labels: ['January', 'February', 'March', 'April'],\n      datasets: [{\n        label: 'Number of Female for the month',\n        borderColor: '#6a82fb',\n        backgroundColor: '#6a82fb',\n        data: [0, 1300, 2200, 3400]\n      }, {\n        label: 'Number of Male for the month',\n        borderColor: '#fc5c7d',\n        backgroundColor: '#fc5c7d',\n        data: [0, 1300, 2200, 3400]\n      }]\n    },\n    options: {\n      responsive: true,\n      legend: {\n        display: false\n      },\n      title: {\n        display: false,\n        text: 'Total Number of Registered Patients- last 4 months'\n      },\n      tooltips: {\n        intersect: false,\n        mode: 'nearest'\n      },\n      hover: {\n        mode: 'index'\n      },\n      scales: {\n        xAxes: [{\n          scaleLabel: {\n            display: false,\n            labelString: 'Month'\n          },\n          gridLines: {\n            display: false\n          }\n        }],\n        yAxes: [{\n          stacked: true,\n          scaleLabel: {\n            display: false,\n            labelString: 'Value'\n          },\n          gridLines: {\n            display: false\n          }\n        }]\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/matosky/react-reduction/src/demos/dashboardPage.js"],"names":["MONTHS","genLineData","moreData","moreData2","labels","datasets","label","backgroundColor","getColor","borderColor","borderWidth","data","randomNum","userProgressTableData","name","chartjs","line","options","responsive","legend","display","title","text","tooltips","intersect","mode","hover","scales","xAxes","scaleLabel","labelString","gridLines","yAxes","stacked"],"mappings":"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","sourcesContent":["\nconst MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n\nconst genLineData = (moreData = {}, moreData2 = {}) => {\n  return {\n    labels: MONTHS,\n    datasets: [\n      {\n        label: 'Dataset 1',\n        backgroundColor: getColor('primary'),\n        borderColor: getColor('primary'),\n        borderWidth: 1,\n        data: [\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n        ],\n        ...moreData,\n      },\n      {\n        label: 'Dataset 2',\n        backgroundColor: getColor('secondary'),\n        borderColor: getColor('secondary'),\n        borderWidth: 1,\n        data: [\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n        ],\n        ...moreData2,\n      },\n    ],\n  };\n};\n\n\n\nexport const userProgressTableData = [\n  {\n\n    name: 'Tom Suliman'\n\n  },\n  {\n    name: 'Jenny Alex'\n  },\n  {\n    name: 'Simi Adedeji'\n  },\n  {\n    \n    name: 'Christine Ada'\n  }\n  \n];\n\nexport const chartjs = {\n\n  line: {\n    data: {\n      labels: ['January', 'February', 'March', 'April'],\n      datasets: [\n        {\n          label: 'Number of Female for the month',\n          borderColor: '#6a82fb',\n          backgroundColor: '#6a82fb',\n          data: [0, 1300, 2200, 3400],\n        },\n\n        {\n          label: 'Number of Male for the month',\n          borderColor: '#fc5c7d',\n          backgroundColor: '#fc5c7d',\n          data: [0, 1300, 2200, 3400],\n        },\n      ],\n    },\n    options: {\n      responsive: true,\n      legend: {\n        display: false,\n      },\n      title: {\n        display: false,\n        text: 'Total Number of Registered Patients- last 4 months',\n      },\n      tooltips: {\n        intersect: false,\n        mode: 'nearest',\n      },\n      hover: {\n        mode: 'index',\n      },\n      scales: {\n        xAxes: [\n          {\n            scaleLabel: {\n              display: false,\n              labelString: 'Month',\n            },\n            gridLines: {\n              display: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            scaleLabel: {\n              display: false,\n              labelString: 'Value',\n            },\n            gridLines: {\n              display: false,\n            },\n          },\n        ],\n      },\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}